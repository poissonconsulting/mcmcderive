[{"path":[]},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to mcmcderive","title":"Contributing to mcmcderive","text":"outlines propose change mcmcderive.","code":""},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to mcmcderive","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to mcmcderive","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to mcmcderive","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"\", fork = TRUE). Install development dependences devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. Begin commit merge messages - indicate user facing changes included NEWS.md. use fledge automatically generate NEWS.md file.","code":""},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to mcmcderive","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to mcmcderive","text":"Please note mcmcderive project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 Poisson Consulting Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with mcmcderive","title":"Getting help with mcmcderive","text":"Thanks using mcmcderive! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/SUPPORT.html","id":"make-sure-its-new","dir":"","previous_headings":"","what":"Make sure its new","title":"Getting help with mcmcderive","text":"opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with mcmcderive","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joe Thorley. Author, maintainer. Ayla Pearson. Author. Kirill Müller. Author. Nadine Hussein. Contributor. . Copyright holder, funder.","code":""},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Thorley J, Pearson , Müller K (2025). mcmcderive: Derive MCMC Parameters. R package version 0.1.2.9003, https://poissonconsulting.github.io/mcmcderive/, https://github.com/poissonconsulting/mcmcderive.","code":"@Manual{,   title = {mcmcderive: Derive MCMC Parameters},   author = {Joe Thorley and Ayla Pearson and Kirill Müller},   year = {2025},   note = {R package version 0.1.2.9003,     https://poissonconsulting.github.io/mcmcderive/},   url = {https://github.com/poissonconsulting/mcmcderive}, }"},{"path":[]},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/index.html","id":"why-mcmcderive","dir":"","previous_headings":"","what":"Why mcmcderive?","title":"Derive MCMC Parameters","text":"mcmcderive R package generate derived parameter(s) Monte Carlo Markov Chain (MCMC) samples using R code. useful means Bayesian models can fitted without inclusion derived parameters add unnecessary clutter slows model fitting. information MCMC samples see Brooks et al. (2011).","code":""},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/index.html","id":"demonstration","dir":"","previous_headings":"","what":"Demonstration","title":"Derive MCMC Parameters","text":"","code":"library(mcmcderive) #> Registered S3 method overwritten by 'mcmcr': #>   method         from  #>   as.mcmc.nlists nlist  mcmcr::mcmcr_example #> $alpha #> [1] 3.718025 4.718025 #>  #> nchains:  2  #> niters:  400  #>  #> $beta #>           [,1]     [,2] #> [1,] 0.9716535 1.971654 #> [2,] 1.9716535 2.971654 #>  #> nchains:  2  #> niters:  400  #>  #> $sigma #> [1] 0.7911975 #>  #> nchains:  2  #> niters:  400  expr <- \"   log(alpha2) <- alpha   gamma <- sum(alpha) * sigma \"  mcmc_derive(mcmcr::mcmcr_example, expr, silent = TRUE) #> $alpha2 #> [1]  41.18352 111.94841 #>  #> nchains:  2  #> niters:  400  #>  #> $gamma #> [1] 6.60742 #>  #> nchains:  2  #> niters:  400"},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/index.html","id":"parallel-chains","dir":"","previous_headings":"Demonstration","what":"Parallel Chains","title":"Derive MCMC Parameters","text":"MCMC object multiple chains run time can substantially reduced generating derived parameters chain parallel. order work necessary : Ensure plyr doParallel installed using install.packages(c(\"plyr\", \"doParallel\")). Register parallel backend using doParallel::registerDoParallel(4). Set parallel = TRUE call mcmc_derive().","code":""},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/index.html","id":"extras","dir":"","previous_headings":"Demonstration","what":"Extras","title":"Derive MCMC Parameters","text":"facilitate translation model code R code extras package provides R equivalent common model functions pow(), phi() log() <-.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/index.html","id":"release","dir":"","previous_headings":"Installation","what":"Release","title":"Derive MCMC Parameters","text":"install release version CRAN. website release version https://poissonconsulting.github.io/mcmcderive/.","code":"install.packages(\"mcmcderive\")"},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/index.html","id":"development","dir":"","previous_headings":"Installation","what":"Development","title":"Derive MCMC Parameters","text":"install development version GitHub r-universe.","code":"# install.packages(\"remotes\") remotes::install_github(\"poissonconsulting/mcmcderive\") install.packages(\"mcmcderive\", repos = c(\"https://poissonconsulting.r-universe.dev\", \"https://cloud.r-project.org\"))"},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/index.html","id":"contribution","dir":"","previous_headings":"","what":"Contribution","title":"Derive MCMC Parameters","text":"Please report issues. Pull requests always welcome.","code":""},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Derive MCMC Parameters","text":"Please note mcmcderive project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Derive MCMC Parameters","text":"Brooks, S., Gelman, ., Jones, G.L., Meng, X.-L. (Editors). 2011. Handbook Markov Chain Monte Carlo. Taylor & Francis, Boca Raton.","code":""},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/pull-request.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"NA","text":"Describe changes detail","code":""},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/pull-request.html","id":"related-issue","dir":"","previous_headings":"","what":"Related Issue","title":"NA","text":"pull request closes issue please include example “fix #4” just relates issue simply include example “#4”.","code":""},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/reference/expression_vectorize.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert New Expression — expression_vectorize","title":"Convert New Expression — expression_vectorize","text":"Takes expression removes loop adds cbind arrays.","code":""},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/reference/expression_vectorize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert New Expression — expression_vectorize","text":"","code":"expression_vectorize(x)"},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/reference/expression_vectorize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert New Expression — expression_vectorize","text":"x expression","code":""},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/reference/expression_vectorize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert New Expression — expression_vectorize","text":"expression","code":""},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/reference/expression_vectorize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert New Expression — expression_vectorize","text":"","code":"expression_vectorize(rlang::expr(for (i in 1:nObs) {   eCount[i] <- b0 })) #> eCount <- b0 expression_vectorize(   rlang::expr(     for (i in 1:length(LogLength)) {       eWeightLength[i] <- b0 + bDayte * Dayte[i]     }   ) ) #> eWeightLength <- b0 + bDayte * Dayte expression_vectorize(   rlang::expr(     for (i in 1:nObs) {       eAnnual[i] <- bAnn[Ann[i]] + bSA[Site[i], Ann[i]]     }   ) ) #> eAnnual <- bAnn[Ann] + bSA[cbind(Site, Ann)]"},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/reference/mcmc_derive.html","id":null,"dir":"Reference","previous_headings":"","what":"MCMC Derive — mcmc_derive","title":"MCMC Derive — mcmc_derive","text":"Generates MCMC object derived parameters MCMC object.","code":""},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/reference/mcmc_derive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MCMC Derive — mcmc_derive","text":"","code":"mcmc_derive(object, ...)  # S3 method for class 'nlist' mcmc_derive(   object,   expr,   values = list(),   monitor = \".*\",   primary = FALSE,   silent = getOption(\"mcmcderive.silent\", FALSE),   ... )  # S3 method for class 'nlists' mcmc_derive(   object,   expr,   values = list(),   monitor = \".*\",   primary = FALSE,   silent = getOption(\"mcmcderive.silent\", FALSE),   ... )  # S3 method for class 'mcmc' mcmc_derive(   object,   expr,   values = list(),   monitor = \".*\",   primary = FALSE,   silent = getOption(\"mcmcderive.silent\", FALSE),   ... )  # S3 method for class 'mcmc.list' mcmc_derive(   object,   expr,   values = list(),   monitor = \".*\",   primary = FALSE,   parallel = FALSE,   silent = getOption(\"mcmcderive.silent\", FALSE),   ... )  # S3 method for class 'mcmcr' mcmc_derive(   object,   expr,   values = list(),   monitor = \".*\",   primary = FALSE,   parallel = FALSE,   silent = getOption(\"mcmcderive.silent\", FALSE),   ... )  # S3 method for class 'mcmcrs' mcmc_derive(   object,   expr,   values = list(),   monitor = \".*\",   primary = FALSE,   parallel = FALSE,   silent = getOption(\"mcmcderive.silent\", FALSE),   ... )"},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/reference/mcmc_derive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MCMC Derive — mcmc_derive","text":"object MCMC object. ... Unused. expr string R code defining values derived parameter(s) respect parameters object. values named list additional R objects evaluate R expression. monitor regular expression specifying derived parameter(s) expr monitor. primary flag specifying whether include original primary parameters new MCMC object. silent flag specifying whether suppress messages warnings. parallel flag specifying whether generate derived parameters chain parallel.","code":""},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/reference/mcmc_derive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MCMC Derive — mcmc_derive","text":"MCMC object derived parameter(s).","code":""},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/reference/mcmc_derive.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MCMC Derive — mcmc_derive","text":"important note parameters expression also occur original object included new object unless primary = TRUE case simply copied original object new one. applies even primary parameters redefined values.","code":""},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/reference/mcmc_derive.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"MCMC Derive — mcmc_derive","text":"mcmc_derive(nlist): Get derived parameters nlist::nlist-object() mcmc_derive(nlists): Get derived parameters nlist::nlists-object() mcmc_derive(mcmc): Get derived parameters coda::mcmc() object mcmc_derive(mcmc.list): Get derived parameters coda::mcmc.list() object mcmc_derive(mcmcr): Get derived parameters mcmcr::mcmcr-object() mcmc_derive(mcmcrs): Get derived parameters mcmcr::mcmcrs-object()","code":""},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/reference/mcmc_derive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MCMC Derive — mcmc_derive","text":"","code":"mcmcr::mcmcr_example #> $alpha #> [1] 3.718025 4.718025 #>  #> nchains:  2  #> niters:  400  #>  #> $beta #>           [,1]     [,2] #> [1,] 0.9716535 1.971654 #> [2,] 1.9716535 2.971654 #>  #> nchains:  2  #> niters:  400  #>  #> $sigma #> [1] 0.7911975 #>  #> nchains:  2  #> niters:  400  #>   expr <- \"  log(alpha2) <- alpha  gamma <- sum(alpha) * sigma\"  mcmc_derive(mcmcr::mcmcr_example, expr, silent = TRUE) #> $alpha2 #> [1]  41.18352 111.94841 #>  #> nchains:  2  #> niters:  400  #>  #> $gamma #> [1] 6.60742 #>  #> nchains:  2  #> niters:  400  #>"},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/reference/mcmcderive-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mcmcderive: Derive MCMC Parameters — mcmcderive-package","title":"mcmcderive: Derive MCMC Parameters — mcmcderive-package","text":"Generates derived parameter(s) Monte Carlo Markov Chain (MCMC) samples using R code. allows Bayesian models fitted without inclusion derived parameters add unnecessary clutter slow model fitting. information MCMC samples see Brooks et al. (2011) <isbn:978-1-4200-7941-8>.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/reference/mcmcderive-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mcmcderive: Derive MCMC Parameters — mcmcderive-package","text":"Maintainer: Joe Thorley joe@poissonconsulting.ca (ORCID) Authors: Ayla Pearson (ORCID) Kirill Müller (ORCID) contributors: Nadine Hussein nadine@poissonconsulting.ca (ORCID) [contributor] Poisson Consulting [copyright holder, funder]","code":""},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/news/index.html","id":"mcmcderive-0129003","dir":"Changelog","previous_headings":"","what":"mcmcderive 0.1.2.9003","title":"mcmcderive 0.1.2.9003","text":"Internal changes.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/news/index.html","id":"bug-fixes-0-1-2-9002","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"mcmcderive 0.1.2.9002","text":"Flatten double braces aggressively (#21, #22).","code":""},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/news/index.html","id":"mcmcderive-0129001","dir":"Changelog","previous_headings":"","what":"mcmcderive 0.1.2.9001","title":"mcmcderive 0.1.2.9001","text":"Add expression_vectorize().","code":""},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/news/index.html","id":"mcmcderive-0129000","dir":"Changelog","previous_headings":"","what":"mcmcderive 0.1.2.9000","title":"mcmcderive 0.1.2.9000","text":"previous version.","code":""},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/news/index.html","id":"mcmcderive-012","dir":"Changelog","previous_headings":"","what":"mcmcderive 0.1.2","title":"mcmcderive 0.1.2","text":"CRAN release: 2021-08-06 Removed constraint derived parameters missing values.","code":""},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/news/index.html","id":"mcmcderive-010","dir":"Changelog","previous_headings":"","what":"mcmcderive 0.1.0","title":"mcmcderive 0.1.0","text":"CRAN release: 2020-07-16 Added mcmc_derive() nlist, nlists mcmc objects Added primary = FALSE argument mcmc_derive() include original parameters . Adopted Tidyverse style error messages. Moved extra functions extras package. Replaced checkr err dependencies chk.","code":""},{"path":"https://poissonconsulting.github.io/mcmcderive/dev/news/index.html","id":"mcmcderive-001","dir":"Changelog","previous_headings":"","what":"mcmcderive 0.0.1","title":"mcmcderive 0.0.1","text":"CRAN release: 2019-07-02 Optimized mcmc_derive().","code":""}]
